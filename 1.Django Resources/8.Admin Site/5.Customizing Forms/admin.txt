### Customizing Forms

Google --> django modeladmin options (all possible ways to customize order)

# e.g. Adding Product Forms (Generated auto by Django)

We will edit these forms

fields = [] --> add form fields (overrides the django one)
exclude = [] --> exclude form fields from the default generated by django 
readonly_fields = [] --> fields that cannot be edited

prepopulated_fields = [] --> prepopulate fields 
prepoulated_fields = {
	'slug':['title']  # any information type in title field, will be auto filled in slug field
}


Sometimes, we may have 100s of drop-down list. This is bad. So to avoid this, we will autofill drop downlist by using autocomplete_fields


class CollectionAdmin(admin.ModelAdmin):
    list_display = ['title', 'products_count']
    search_fields = ['title']

class ProductAdmin(admin.ModelAdmin):
    # specify how we want to view and edit our products
    autocomplete_fields = ['collection'] # autocomplete_fields is linked with search_fields 

# e.g show placed_at field in add order form
placed_at = models.DateTimeField(auto_now_add=True) exists in modal class. This means django will auto fill this field.
if we remove auto_now_add, we will be able to set the date and time of the field 


